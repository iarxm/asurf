# asurf
A powertool for sport analysis. The goal is rapid retrieval, sorting, analysis annotation and multi pane comparisons, backups/version-control, and distribution. Furthermore, this project involves a formal specification for a coaching workflow, in terms of cycles such as: { observation -> analysis -> intervention -> repeat }. In particular, specifying systems of naming, storing and processing analysis data, and structuring evaluation data and documents.

Furthermore, there will be tools introduced over time which will automate the technical evaluation process and provide a professional means of collaboration on goal setting and training trackers. Tools such as latex and pandoc will be used to swiftly convert from analysis notes in markdown to publish documents as pdf's or html pages.

## The problem
Current analysis systems appear to be in their essence, bloated, proprietary, and over priced video annotators. There also appears to be a lack of specification for how to process and store the analysis data of clients.

In terms of the bare fundamentals of functionality, what is required is the ability to rapidly view videos and associated data, generate analysis data in the form of written and visual annotations, process this into evaluations and immediately distribute. Furthermore to be able to collaborate effectively.

## The solution
This project works from cli tools and generally adopts the idea of 'everything as s file' approach. This enables powerful UNIX tools to be adopted such as neovim, mpv, rclone, rsync, restic/borg, git, bash, and a cli file manager (such as nnn, ranger or lf), to name a few.

## Tools
### msurf
'msurf' is used to import data from the camera source into a working projects hierarchy. Dir's will be automatically sorted by date/time and the specification will involve abbreviating the session names. After analysis, 'msurf' can be used to automatically move the clips into client specific repo's and immediately distribute them via a cloud service. **msurf** uses rclone as a backend for distribution, to interface in the background with most commonly used cloud services.

### uview
A cli file manager is used in conjuction with a preview program 'uview' to rapidly sort through the clips of a session. In particular, 'uview' interfaces with mpv. Mpv is configured and extended for frame by frame analysis via vim like binds, and lua extensions to utilise 'flameshot' as a visual annotator and 'neovim' as a longer form text annotator. 

### anotr
The 'anotr' program is used to create annotations via the insertion of tags into the filename. This is an extremely useful solution to rapidly tag athletes to a clip, provide a rating and brief annotation and feedback notes. Neovim can be used 

## Work In Progress
The components of **asurf** are being integrated into this centralised project. **asurf** currently runs through some tinkering of configuration files. The first release will be made once the program can be launched via a centralised cli program 'asurf'.


## Instalation
#### DEPENDENCIES:
```bash
mpv
```
#### OPTIONAL
```bash
i3 neovim nnn
```
#### Install


# DESIGN PHILOSOPHY

- SUCKLESS philosophy

- Modularity

## Roadmap
- [ ] Clean up current scripts and integrate
- [ ] Centralise related configuration files: mpv; nnn; i3
- [ ] Method of launching mpv with specific configs.. (way of packaging it up into an mpv wrapper or larger script?)

### Longer term
- [ ] Convert to C code
- [ ] Window container
- [ ] Out of the box

### Vision
- [ ] Interface with a database system
- [ ] Integrate into ai cv and llm models
- [ ] gamification of athlete development

<!--- vim:ft=markdown
